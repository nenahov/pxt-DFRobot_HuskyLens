{
  "Content1": "@file pxt-DFRobot_HuskyLens/huskylens.ts\n@brief DFRobot's huskylens makecode library.\n@n [Get the module here](https://github.com/DFRobot/pxt-DFRobot_HaskyLens)\n@n HuskyLens is an easy-to-use AI vision sensor with six built-in functions: face recognition, object tracking, object recognition, line tracking, color recognition, and label (qr code) recognition. \nOnly one button is needed to complete the AI training, which can get rid of tedious training and complicated visual algorithm and help users stay focused on the conception and implementation of the project.\n* @copyright    [DFRobot](http://www.dfrobot.com), 2016\n@copyright    MIT Lesser General Public License\n* @author [email](jie.tang@dfrobot.com)\n@date  2020-3-17",
  "huskylens.clearOSD": "HuskyLens clear characters in the screen",
  "huskylens.forgetLearn": "Huskylens forget all learning data of the current algorithm",
  "huskylens.getBox": "HuskyLens get the box or arrow total number from result.",
  "huskylens.getBox_S": "HuskyLens get the total number of box or arrow from result.",
  "huskylens.getBox_S|param|id": "to id ,eg: 1",
  "huskylens.getIds": "HuskyLens get the number of the learned ID from result.",
  "huskylens.initI2c": "HuskyLens init I2C until success",
  "huskylens.initMode": "HuskyLens change mode algorithm until success.",
  "huskylens.isAppear": "The box or arrow corresponding to ID obtained by HuskyLens from result appears in screenï¼Ÿ",
  "huskylens.isAppear_s": "The box or arrow HuskyLens got from result appears in screen?",
  "huskylens.isAppear|param|id": "to id ,eg: 1",
  "huskylens.isLearned": "The ID Huskylens got from result has been learned before?",
  "huskylens.isLearned|param|id": "to id ,eg: 1",
  "huskylens.readArrow_s": "HuskyLens get the parameter of arrow near the screen center from result.",
  "huskylens.readArrow_ss": "HuskyLens get the parameter of the Nth arrow from result.",
  "huskylens.readArrow_ss|param|index": "to index ,eg: 1",
  "huskylens.readBox_s": "HuskyLens get the parameter of box near the screen center from result.",
  "huskylens.readBox_ss": "HuskyLens get the parameter of Nth box from result.",
  "huskylens.readBox_ss|param|index": "to index ,eg: 1",
  "huskylens.readeArrow": "HuskyLens get the parameter of the arrow corresponding to ID from result.",
  "huskylens.readeArrow_index": "HuskyLens get the parameter of the Nth arrow corresponding to ID from result.",
  "huskylens.readeArrow_index|param|id": "to id ,eg: 1",
  "huskylens.readeArrow_index|param|index": "to index ,eg: 1",
  "huskylens.readeArrow|param|id": "to id ,eg: 1",
  "huskylens.readeBox": "HuskyLens get the parameter of the box corresponding to ID from result.",
  "huskylens.readeBox_index": "HuskyLens get the parameter of the Nth box corresponding to ID from result.",
  "huskylens.readeBox_index|param|id": "to id ,eg: 1",
  "huskylens.readeBox_index|param|index": "to index ,eg: 1",
  "huskylens.readeBox|param|id": "to id ,eg: 1",
  "huskylens.request": "HuskyLens requests data and stores it in the result.",
  "huskylens.saveModelToTFCard": "Save data model",
  "huskylens.takePhotoToSDCard": "Photos and screenshots",
  "huskylens.writeLearn1": "Huskylens automatic learning ID",
  "huskylens.writeLearn1|param|id": "to id ,eg: 1",
  "huskylens.writeName": "Set ID name",
  "huskylens.writeName|param|id": "to id ,eg: 1",
  "huskylens.writeName|param|name": "to name ,eg: \"DFRobot\"",
  "huskylens.writeOSD": "Display characters on the screen",
  "huskylens.writeOSD|param|name": "to name ,eg: \"DFRobot\"",
  "huskylens.writeOSD|param|x": "to x ,eg: 150",
  "huskylens.writeOSD|param|y": "to y ,eg: 30"
}